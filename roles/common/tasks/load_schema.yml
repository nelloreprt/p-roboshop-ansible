# load_schema_function

# 1. ---------------------------------------------------------------------------------------------------------------
  if [${load_schema} == true]
  then
  if [${schema_type} == mongo]
  PRINT_HEAD "install mongodb-client"
  yum install mongodb-org-shell -y &>> /tmp/roboshop.log
  STATUS_CHECK
  
  PRINT_HEAD "load schema"
  mongo --host MONGODB-SERVER-IPADDRESS </app/schema/{component}.js  &>> /tmp/roboshop.log
  STATUS_CHECK

  - name: Load MongoDB Schema
    when: ( {{schema_type}} == "mongo" ) and ( {{load_schema}} == "true" )
    block:
      - name: Setup the MongoDB repo file
        ansible.builtin.template:
          src: mongo.repo
          dest: /etc/yum.repos.d/mongo.repo

      - name: install mongodb-client
        ansible.builtin.yum:
          name: mongodb-org-shell
          state: installed

        # when we used DOCUMENTDB on aws >>
      - name: Download MongoDB Pem file to "/app_directory"
          ansible.builtin.get_url:
            url: https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem
            dest: /app/rds-combined-ca-bundle.pem

      - name: Load Schema
        # when we used mongodb on server >>
        # ansible.builtin.shell: mongo --host "{{ lookup('aws_ssm', 'dev.catalogue.mongo_url', region='us-east-1' ) }}" </app/schema/{{component}}.js

        # when we used DOCUMENTDB on aws >>
        # for reference >>
        # ansible.builtin.shell: mongo --ssl --host docdb-2023-05-23-04-44-49.cluster-crsv0hwzffxa.us-east-1.docdb.amazonaws.com:27017 --sslCAFile /app/rds-combined-ca-bundle.pem --username admin789 --password <insertYourPassword> </app/schema/{{component}}.js

        ansible.builtin.shell: mongo --ssl --host {{ lookup('aws_ssm', '{{env}}.docdb.url.{{component}}', region='us-east-1' ) }}:27017
        --sslCAFile /app/rds-combined-ca-bundle.pem
        --username {{ lookup('amazon.aws.aws_ssm', '{{env}}.docdb.master_username', region='us-east-1') }}
        --password {{ lookup('amazon.aws.aws_ssm', '{{env}}.docdb.master_password', region='us-east-1') }} </app/schema/{{component}}.js

    # 2. ---------------------------------------------------------------------------------------------------------------
    PRINT_HEAD "install mysql-client"
    yum install mysql -y  &>> /tmp/roboshop.log
    STATUS_CHECK
    
    PRINT_HEAD "load schema"
    mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pRoboShop@1 < /app/schema/{component}.sql   &>> /tmp/roboshop.log
    STATUS_CHECK
    
    PRINT_HEAD "restart shipping"
    systemctl restart {component}
    STATUS_CHECK

  - name: Load MySQL Schema
    when: ( {{schema_type}} != "mongo" ) and ( {{load_schema}} == "true" )
    block:
      - name: install mysql-client
        ansible.builtin.yum:
          name: mysql

      - name: Load Schema
        ansible.builtin.shell: mysql -h "{{ lookup('aws_ssm', '${{env}}.rds.endpoint', region='us-east-1' ) }}" -u"{{ lookup('aws_ssm', '{{env}}.{{component}}.db_user', region='us-east-1' ) }}" -p"{{ lookup('aws_ssm', 'dev.shipping.db_pass', region='us-east-1' ) }}" < /app/schema/{component}.sql

      - name: restart shipping
        ansible.builtin.systemd:
          name: {{component}}
          state: restarted
          enabled: true